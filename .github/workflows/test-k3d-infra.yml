name: "Test UDS k3d CI Infra"

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "**.md"
      - "**.json"
      - ".gitignore"

  pull_request:
    branches:
      - "main"
    paths-ignore:
      - "**.md"
      - "**.json"
      - ".gitignore"

permissions:
  id-token: write
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.set_env.outputs.image_name }}
    steps:
    - name: Set VAR for image name based on run context
      id: set_env
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "image_name=rc-${{ env.IMAGE }}" >> $GITHUB_OUTPUT
        else
        echo "image_name=${{ env.IMAGE }}" >> $GITHUB_OUTPUT
        fi
      env:
        IMAGE: uds-ci-k3d


  build-ami:
    needs: prepare
    runs-on: ubuntu-latest
    # Only run this job when a PR has changes in the 'packer/' directory, or when a commit with changes to the 'packer/' directory is pushed to the main branch.
    if: ${{ contains(github.event.pull_request.changed_files, 'packer/') }} || github.event_name == 'push' && contains(github.event.head_commit.modified, 'packer/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: us-west-2
          # 21600 seconds == 6 hours
          role-duration-seconds: 21600

      - name: Packer init
        run: packer init .
        working-directory: packer

      - name: Packer build
        run: packer build -var "ami_name=${{ needs.prepare.outputs.image_name }}".
        working-directory: packer

  test-k3d-infra:
    runs-on: ubuntu-latest
    # Run if changes on are picked up in terraform or workflow files. Depend on build-ami if that job triggers.
    needs: [prepare, build-ami]
    # Only run this job when the 'build-ami' job finishes successfully, or when it is skipped.
    # If the 'build-ami' job fails, we want to fail fast and fix the error rather than continuing on to spin up AWS infrastructure.
    if: ${{ needs.build-ami.result == 'success' || needs.build-ami.result == 'skipped' }}
    # Test with parallel jobs using and not using unique input
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Zarf
        # This uses the default options (latest version of zarf, no init package)
        uses: defenseunicorns/setup-zarf@main

      - name: Generate unique id
        id: unique-id
        run: echo "unique-id=$(openssl rand -hex 8)" >> $GITHUB_OUTPUT

        # Test passing in role arn and region
      - name: Create Cluster Via Action
        id: create_cluster
        uses: ./
        with:
          cluster-action: create
          aws-assume-role: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          aws-region: us-west-2
          unique-id: ${{ steps.unique-id.outputs.unique-id }}
          k3d-config: "k3d-calico.yaml"
          instance-size: "m6i.8xlarge"
      # Test cluster access in same job
      - name: Show Cluster
        run: |
            zarf tools kubectl get nodes
            zarf tools kubectl config get-contexts
      # Test cluster access would work across jobs via secret value
      - name: Delete kubeconfig and test secret manager secret
        run: |
            rm -rf ~/.kube/config
            aws secretsmanager get-secret-value \
              --secret-id "${{ steps.create_cluster.outputs.secret-name }}" \
              --query 'SecretString' \
              --output text > ~/.kube/config
            zarf tools kubectl get nodes
            zarf tools kubectl config get-contexts
      # Test with role already assumed
      - name: Destroy Cluster via Action 
        if: always()
        uses: ./
        with:
          cluster-action: destroy
          aws-assume-role: ""
          unique-id: ${{ steps.unique-id.outputs.unique-id }}
